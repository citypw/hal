library (EXAMPLE_GATE_LIBRARY) {
    define(cell);
    cell(BUF) {
        pin(I) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I";
        }
    }

    cell(TBUF) {
        pin(I, T) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "IO";
        }
        pin(IO) {
            direction: inout;
            function: "";
        }
    }

    cell(INV) {
        pin(I) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "!I";
        }
    }

    cell(MUX) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(S) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "(!S & I0) | (S & I1)";
        }
    }

    cell(XOR) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I0 ^ I1";
        }
    }

    cell(AND2) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I0 & I1";
        }
    }

    cell(AND3) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I0 & I1 & I2";
        }
    }

    cell(AND4) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(I3) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I0 & I1 & I2 & I3";
        }
    }

    cell(AND5) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(I3) {
            direction: input;
        }
        pin(I4) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I0 & I1 & I2 & I3 & I4";
        }
    }

    cell(AND6) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(I3) {
            direction: input;
        }
        pin(I4) {
            direction: input;
        }
        pin(I5) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I0 & I1 & I2 & I3 & I4 & I5";
        }
    }

    cell(AND7) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(I3) {
            direction: input;
        }
        pin(I4) {
            direction: input;
        }
        pin(I5) {
            direction: input;
        }
        pin(I6) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I0 & I1 & I2 & I3 & I4 & I5 & I6";
        }
    }

    cell(AND8) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(I3) {
            direction: input;
        }
        pin(I4) {
            direction: input;
        }
        pin(I5) {
            direction: input;
        }
        pin(I6) {
            direction: input;
        }
        pin(I7) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I0 & I1 & I2 & I3 & I4 & I5 & I6 & I7";
        }
    }

    cell(OR2) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I0 | I1";
        }
    }

    cell(OR3) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I0 | I1 | I2";
        }
    }

    cell(OR4) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(I3) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I0 | I1 | I2 | I3";
        }
    }

    cell(OR5) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(I3) {
            direction: input;
        }
        pin(I4) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I0 | I1 | I2 | I3 | I4";
        }
    }

    cell(OR6) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(I3) {
            direction: input;
        }
        pin(I4) {
            direction: input;
        }
        pin(I5) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I0 | I1 | I2 | I3 | I4 | I5";
        }
    }

    cell(OR7) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(I3) {
            direction: input;
        }
        pin(I4) {
            direction: input;
        }
        pin(I5) {
            direction: input;
        }
        pin(I6) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I0 | I1 | I2 | I3 | I4 | I5 | I6";
        }
    }

    cell(OR8) {
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(I3) {
            direction: input;
        }
        pin(I4) {
            direction: input;
        }
        pin(I5) {
            direction: input;
        }
        pin(I6) {
            direction: input;
        }
        pin(I7) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "I0 | I1 | I2 | I3 | I4 | I5 | I6 | I7";
        }
    }

    cell(LUT1) {
        lut ("lut_out") {
            data_category     : "generic";
            data_identifier   : "INIT";
            bit_order         : "ascending";
        }
        pin(I0) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "lut_out";
        }
    }

    cell(LUT2) {
        lut ("lut_out") {
            data_category     : "generic";
            data_identifier   : "INIT";
            bit_order         : "ascending";
        }
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "lut_out";
        }
    }

    cell(LUT3) {
        lut ("lut_out") {
            data_category     : "generic";
            data_identifier   : "INIT";
            bit_order         : "ascending";
        }
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "lut_out";
        }
    }

    cell(LUT4) {
        lut ("lut_out") {
            data_category     : "generic";
            data_identifier   : "INIT";
            bit_order         : "ascending";
        }
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(I3) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "lut_out";
        }
    }

    cell(LUT5) {
        lut ("lut_out") {
            data_category     : "generic";
            data_identifier   : "INIT";
            bit_order         : "ascending";
        }
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(I3) {
            direction: input;
        }
        pin(I4) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "lut_out";
        }
    }

    cell(LUT6) {
        lut ("lut_out") {
            data_category     : "generic";
            data_identifier   : "INIT";
            bit_order         : "ascending";
        }
        pin(I0) {
            direction: input;
        }
        pin(I1) {
            direction: input;
        }
        pin(I2) {
            direction: input;
        }
        pin(I3) {
            direction: input;
        }
        pin(I4) {
            direction: input;
        }
        pin(I5) {
            direction: input;
        }
        pin(O) {
            direction: output;
            function: "lut_out";
        }
    }

    cell(FF) {
        ff ("IQ" , "IQN") {
            next_state          : "D";
            clocked_on          : "CE & C";
        }
        pin(C) {
            direction: input;
            clock: true;
        }
        pin(CE) {
            direction: input;
        }
        pin(D) {
            direction: input;
        }
        pin(Q) {
            direction: output;
            function: "IQ";
        }
    }

    cell(FFS) {
        ff ("IQ" , "IQN") {
            next_state          : "D";
            clocked_on          : "CE & C";
            preset              : "S";
        }
        pin(C) {
            direction: input;
            clock: true;
        }
        pin(CE) {
            direction: input;
        }
        pin(D) {
            direction: input;
        }
        pin(S) {
            direction: input;
        }
        pin(Q) {
            direction: output;
            function: "IQ";
        }
    }

    cell(FFR) {
        ff ("IQ" , "IQN") {
            next_state          : "D";
            clocked_on          : "CE & C";
            clear               : "R";
        }
        pin(C) {
            direction: input;
            clock: true;
        }
        pin(CE) {
            direction: input;
        }
        pin(D) {
            direction: input;
        }
        pin(R) {
            direction: input;
        }
        pin(Q) {
            direction: output;
            function: "IQ";
        }
    }

    cell(FFSR) {
        ff ("IQ" , "IQN") {
            next_state          : "D";
            clocked_on          : "CE & C";
            preset              : "S";
            clear               : "R";
            clear_preset_var1   : L;
        }
        pin(C) {
            direction: input;
            clock: true;
        }
        pin(CE) {
            direction: input;
        }
        pin(D) {
            direction: input;
        }
        pin(R) {
            direction: input;
        }
        pin(S) {
            direction: input;
        }
        pin(Q) {
            direction: output;
            function: "IQ";
        }
    }

    cell(GND) {
        pin(O) {
            direction: output;
            function: "0";
        }
    }

    cell(VCC) {
        pin(O) {
            direction: output;
            function: "1";
        }
    }

}
